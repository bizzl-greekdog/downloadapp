// Generated by CoffeeScript 1.10.0
(function() {
  module.exports.cleanText = function(text) {
    return text.replace(/[\t\f\r]/g, '').replace(/<br[^>]*>/g, '\n').replace(/<a[^>]*iconusername[^>]*>[^<]*<img[^>]*title="([^"]+)"[^>]*>[^<]*<\/a>/g, '$1').replace(/<(\/?[bisu])(?: [^>]*)?>/g, '[$1]').replace(/<[^>]+>/g, '').replace(/^[\t\n\f\r]*|[\t\n\f\r]*$/g, '').replace(/\n\n\n+/g, '\n\n').replace(/;([^ ])/g, '; $1').replace(/^\n+/, '').replace(/\[(\/?[bisu])]/g, '<$1>').replace(/&nbsp;/g, ' ').trim();
  };

  module.exports.PatternUrl = (function() {
    function PatternUrl(pattern, startValue, stepWidth) {
      this.pattern = pattern;
      this.stepWidth = stepWidth;
      this.i = startValue;
    }

    PatternUrl.prototype.nextPage = function() {
      var i;
      i = this.i;
      this.i += this.stepWidth;
      return this.pattern.replace(/%i/, i);
    };

    PatternUrl.prototype.toString = function() {
      return this.pattern + '; ' + this.i + '; ' + this.stepWidth;
    };

    return PatternUrl;

  })();

  module.exports.scanLine = function() {
    var system;
    system = require('system');
    return system.stdin.readLine();
  };

  module.exports.exportDownloads = function(casper, a) {
    return a.forEach(function(element) {
      return casper.echo('DOWNLOAD ' + JSON.stringify(element));
    });
  };

  module.exports.notify = function(casper, message) {
    return casper.echo('NOTIFY ' + message);
  };

  module.exports.alert = function(casper, message) {
    return casper.echo('ALERT ' + message);
  };

}).call(this);
